package com.palline.rewardrule.controller;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.palline.common.util.Constant;
import com.palline.common.util.JsonUtil;
import com.palline.common.util.PageData;
import com.palline.common.util.StringUtil;
import com.palline.common.util.TipInfo;
import com.palline.rewardrule.entity.SysParam;
import com.palline.rewardrule.service.imp.SysParamServiceImp;

/**
 * Copyright (C), 2015-8-10, 上海蓬海涞讯数据技术有限公司
 * @author gmm
 * @version 1.0
 * @date 2015-8-10
 */
@Controller
@RequestMapping("/sysParam")
public class SysParamController {	
	@Resource
	private SysParamServiceImp sysParamServiceImp;
	
	
	/**
	 * 角色导航
	 **/

	@RequestMapping(value = "/list.do")
	public String list(Model model) {
		return "sysParam/sysParamList";
	}
	
	/**
	 * 角色维护拉取数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/getJsonSysParams.do")
	public PageData<SysParam> getJsonSysParams(@RequestParam("page") Integer pageIndex,@RequestParam("findName") String findName,HttpServletResponse response, HttpServletRequest request) {
		SysParam sysParam = new SysParam();
		sysParam.setParameterName(StringUtil.strToUtf8(findName));
		Long total = sysParamServiceImp.getSysParamPageTotal(sysParam);
		List<SysParam> list = sysParamServiceImp.querySysParamListPage(sysParam, pageIndex, Constant.PAGE_SIZE);
		return new PageData<SysParam>(total,list);
	}
	
	/**
	 * 角色维护拉取数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/getJsonSysParamsAll.do")
	public List<SysParam> getJsonSysParamsAll(@RequestParam("page") Integer pageIndex,
			@RequestParam("start") Integer start,
			@RequestParam("limit") Integer limit,
			HttpServletResponse response, HttpServletRequest request) {
		SysParam sysParam = new SysParam();
		List<SysParam> list = sysParamServiceImp.getSysParamListByOverride(sysParam);
		return list;
	}
	
	/**
	 * 角色新增数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/add.do",method=RequestMethod.POST)
	public Object add(@RequestParam("json") String json) {
		String jsonNew = JsonUtil.replaceAllOnOff(json);
		SysParam SysParam=JSON.parseObject(jsonNew,SysParam.class);
		int result = sysParamServiceImp.insertSysParam(SysParam);
		if(result>0){
			return new TipInfo(Constant.SUCCESS,"操作成功!");
		}else{
			return new TipInfo(Constant.FAILTURE,"操作失败!");
		}
	}
	
	/**
	 * 角色修改数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/edit.do",method=RequestMethod.POST)
	public Object edit(@RequestParam("json") String json) {
		String jsonNew = JsonUtil.replaceAllOnOff(json);
		SysParam SysParam=JSON.parseObject(jsonNew,SysParam.class);
		int result = sysParamServiceImp.updateSysParam(SysParam);
		if(result>0){
			return new TipInfo(Constant.SUCCESS,"操作成功!");
		}else{
			return new TipInfo(Constant.FAILTURE,"操作失败!");
		}
	}
	
	
	
	
	/**
	 * 角色删除数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/delete.do",method=RequestMethod.POST)
	public Object delete(@RequestParam("id") Integer id) {
		int result = sysParamServiceImp.deleteSysParamById(id);
		if(result>0){
			return new TipInfo(Constant.SUCCESS,"操作成功!");
		}else{
			return new TipInfo(Constant.FAILTURE,"操作失败!");
		}
	}
	
	
	/**
	 * 角色拉取数据
	 **/
	@ResponseBody
	@RequestMapping(value = "/getAllSysParams.do")
	public List<SysParam> getAllSysParams() {
		List<SysParam> list = sysParamServiceImp.querySysParamList(null);
		return list;
	}

}
